package com.example.yuanmu.lunbo.Activity;

import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.yuanmu.lunbo.R;
import com.example.yuanmu.lunbo.Util.ImgUtil;
import com.example.yuanmu.lunbo.Util.TabEntity;
import com.flyco.tablayout.CommonTabLayout;
import com.flyco.tablayout.listener.CustomTabEntity;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity  implements
        ViewPager.OnPageChangeListener{
    //轮播图字段
    private ViewPager mvPager;
    private TextView mTextView;
    private ImageView[] mImageViews;// 要循环显示的图片资源（也可以是其他的view）
    // 轮播图专用
    private String lunboimgsrc[] = new String[4];
    private String lunbotitle[] = new String[4];
    private int imgsize = 0;
    private final int DURING_TIME = 2000; // 滚动延迟
    private int currentIndex = 0;// （自动播放时）定时周期要显示的图片的索引（viewpager中的图片位置）
    private TextView tv_title;
    private Context mcontext;


    private String[] mTitles = {"1页", "2页", "3页", "4页","5页"};
//导航主控件
    CommonTabLayout commonTabLayout;
    //未选中的导航图
    private int[] mIconUnselectIds = {
            R.drawable.navigation_icon_1,R.drawable.navigation_icon_1,
            R.drawable.navigation_icon_1, R.drawable.navigation_icon_1,R.drawable.navigation_icon_1};
    //选中后的图片
    private int[] mIconSelectIds = {
            R.drawable.navigation_icon_2, R.drawable.navigation_icon_2,
            R.drawable.navigation_icon_2, R.drawable.navigation_icon_2,R.drawable.navigation_icon_2};

    //CustomTabEntity为接口，实现类是TabEntity，用来存储每个Tab的标题，和点击前和点击后的两张图
    private ArrayList<CustomTabEntity> mTabEntities = new ArrayList<>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //加入导航所需的的数据
        for (int i = 0; i < mTitles.length; i++) {
            mTabEntities.add(new TabEntity(mTitles[i], mIconSelectIds[i], mIconUnselectIds[i]));
        }
        initView();
        // 轮播图
        getLunbo();
    }
    private void getLunbo() {
        lunboimgsrc[0] = "http://img3.imgtn.bdimg.com/it/u=2764760324,2357076779&fm=11&gp=0.jpg";
        lunboimgsrc[1] = "http://img1.imgtn.bdimg.com/it/u=1608660630,3543865427&fm=21&gp=0.jpg";
        lunboimgsrc[2] = "http://img3.imgtn.bdimg.com/it/u=846296406,2047119123&fm=21&gp=0.jpg";
        lunboimgsrc[3] = "http://img5.imgtn.bdimg.com/it/u=2116861612,385033417&fm=21&gp=0.jpg";

        lunbotitle[0] = "第一，不准意气用事。";
        lunbotitle[1] = "大事不好啦，富士康又有人跳楼啦。";
        lunbotitle[2] = "这是个神奇的国度。";
        lunbotitle[3] = "有些人死了，可是他还活着。";
        initImg();
    }
    private void initView() {
        mcontext = MainActivity.this;
        tv_title = (TextView) findViewById(R.id.tv_title);
        mvPager = (ViewPager) findViewById(R.id.circlulate_pager);
        mTextView = (TextView) findViewById(R.id.page);
        commonTabLayout = (CommonTabLayout) findViewById(R.id.tl_2);
        commonTabLayout.setTabData(mTabEntities);
    }

    public void initImg() {
        // 设置轮播图信息
        Log.i("ok", "-----------------mvPager = " + mvPager);
        int length = lunboimgsrc.length + 2;
        mImageViews = new ImageView[length];
        for (int i = 0; i < length; i++) {
            ImageView imageView = new ImageView(mcontext);
            mImageViews[i] = imageView;
        }
        setImg(length);
        mvPager.setAdapter(new HomePageViewpagerAdapter());
        mvPager.setCurrentItem(1);

        mvPager.setOnPageChangeListener(this);

        // 设置定时
        mHandler.sendEmptyMessageDelayed(0, DURING_TIME);
    }
    public void setImg(int length) {
        imgsize = length;
        for (int i = 0; i < length; i++) {
            if (i < length - 2) {
                final int index = i;
                Log.i("ok","---------mImageViews = "+mImageViews);
                ImgUtil.setBackground(mImageViews[i + 1], lunboimgsrc[i], 300,
                        300);
                mImageViews[i + 1].setOnClickListener(new View.OnClickListener() {

                    @Override
                    public void onClick(View v) {
                        if (index >= 0) {
//
                        }
                    }
                });
            }
        }
		/*
		 * 第一张图片和最后一张图片应另外设置
		 */
        ImgUtil.setBackground(mImageViews[0],
                lunboimgsrc[lunboimgsrc.length - 1], 300, 300);
        ImgUtil.setBackground(mImageViews[length - 1], lunboimgsrc[0], 300, 300);
    }
    @Override
    public void onPageScrollStateChanged(int arg0) {
        // TODO Auto-generated method stub
    }


    @Override
    public void onPageScrolled(int arg0, float arg1, int arg2) {
        // TODO Auto-generated method stub
        if (arg1 == 0.0) {
            if (arg0 == 0) {
                mvPager.setCurrentItem(imgsize - 2, false);
            } else if (arg0 == imgsize - 1) {
                mvPager.setCurrentItem(1, false);
            }
        }
    }

    /**
     * 显示滑到了第几张（不是必须的）
     */
    @Override
    public void onPageSelected(int arg0) {
        // TODO Auto-generated method stub
        currentIndex = arg0;// 把当前页的索引记住，方便跳转到下一页（这是必须的）
        if (arg0 == 1) {
            mTextView.setText(arg0 + "/" + (imgsize - 2));
            tv_title.setText(lunbotitle[arg0 - 1]);
        } else if (arg0 == 2) {
            mTextView.setText(arg0 + "/" + (imgsize - 2));
            tv_title.setText(lunbotitle[arg0 - 1]);
        } else if (arg0 == 3) {
            mTextView.setText(arg0 + "/" + (imgsize - 2));
            tv_title.setText(lunbotitle[arg0 - 1]);
        } else if (arg0 == 4) {
            mTextView.setText(arg0 + "/" + (imgsize - 2));
            tv_title.setText(lunbotitle[arg0 - 1]);
        }
    }

    Handler mHandler = new Handler() {

        @Override
        public void handleMessage(Message msg) {
            // 设置定位地址
            super.handleMessage(msg);
            currentIndex++;
            mvPager.setCurrentItem(currentIndex, true);
            mHandler.sendEmptyMessageDelayed(0, DURING_TIME);
        }
    };
    private class HomePageViewpagerAdapter extends PagerAdapter {


        public int getCount() {
            return mImageViews.length;
        }


        public boolean isViewFromObject(View arg0, Object arg1) {
            return arg0 == arg1;
        }


        public void destroyItem(View container, int position, Object object) {
            ((ViewPager) container).removeView((View) object);
        }


        public Object instantiateItem(View container, int position) {
            ((ViewPager) container).addView(mImageViews[position]);
            return mImageViews[position];
        }
    }
}
