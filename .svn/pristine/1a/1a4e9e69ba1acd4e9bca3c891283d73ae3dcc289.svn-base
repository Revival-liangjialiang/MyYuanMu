package com.example.yuanmu.lunbo.Fragment;

import android.content.Intent;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import com.example.yuanmu.lunbo.Activity.LoveActivity;
import com.example.yuanmu.lunbo.Activity.Lovematch;
import com.example.yuanmu.lunbo.Activity.MainActivity;
import com.example.yuanmu.lunbo.Activity.Search_in_figure;
import com.example.yuanmu.lunbo.Activity.Storytelling_session;
import com.example.yuanmu.lunbo.Custom.MyView;
import com.example.yuanmu.lunbo.R;
import com.jingchen.pulltorefresh.PullToRefreshLayout;
import com.jude.rollviewpager.RollPagerView;
import com.jude.rollviewpager.adapter.LoopPagerAdapter;
import com.jude.rollviewpager.hintview.IconHintView;

/**
 * Created by Administrator on 2016/8/25 0025.
 */
public class HomePage_Fragment extends Fragment implements View.OnClickListener{
    HomePage_Fragment.ClickListenerClass mListenerClass = new HomePage_Fragment.ClickListenerClass();
    private RollPagerView mRollViewPage_top,mRollViewPager_bottom;
    PullToRefreshLayout mPullToRefreshLayout;
    MainActivity m;
    MyView mLove_match,mLoveActivity,mStorytelling_session,mSearch_in_figure;
    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        ViewGroup view = (ViewGroup) inflater.from(container.getContext()).inflate(R.layout.home_page_fragment_layout,container,false);
        return view;
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        m = (MainActivity) getActivity();
        initView();
    }

    private void initView() {
        mLove_match = (MyView)m.findViewById(R.id.love_match);
        mLoveActivity = (MyView)m.findViewById(R.id.love_activity);
        mStorytelling_session = (MyView)m.findViewById(R.id.storytelling_session);
        mSearch_in_figure = (MyView)m.findViewById(R.id.search_in_figure);
        mLove_match.bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.myviewtest);
        mLoveActivity.bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.myviewtest);
        mStorytelling_session.bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.myviewtest);
        mSearch_in_figure.bitmap = BitmapFactory.decodeResource(getResources(),R.mipmap.myviewtest);
        mLove_match.postInvalidate();
        mLoveActivity.postInvalidate();
        mStorytelling_session.postInvalidate();
        mSearch_in_figure.postInvalidate();
        mLove_match.setOnClickListener(this);
        mLoveActivity.setOnClickListener(this);
        mStorytelling_session.setOnClickListener(this);
        mSearch_in_figure.setOnClickListener(this);
        //初始化顶部轮播图
        mRollViewPage_top= (RollPagerView) m.findViewById(R.id.roll_view_pager_top);
        mRollViewPage_top.setAnimationDurtion(500);
        mRollViewPage_top.setAdapter(new TestLoopAdapter_top(mRollViewPage_top));
        mRollViewPage_top.setHintView(new IconHintView(m,R.drawable.point_focus,R.drawable.point_normal));
        //初始化中部轮播图
        mRollViewPager_bottom = (RollPagerView)m.findViewById(R.id.roll_view_pager_bottom);
        mRollViewPager_bottom.setAnimationDurtion(200);
        mRollViewPager_bottom.setPlayDelay(1000);
        mRollViewPager_bottom.setAdapter(new TestLoopAdapter_bottom(mRollViewPager_bottom));
        mRollViewPager_bottom.setHintView(new IconHintView(m,R.drawable.point_focus,R.drawable.point_normal));
   //初始化下拉控件
        mPullToRefreshLayout = ((PullToRefreshLayout) m.findViewById(R.id.refresh_view));
        mPullToRefreshLayout.setOnPullListener(new MyPullListener());
        //加载更多的监听
        mPullToRefreshLayout.setOnLoadmoreProcessListener(new MyOnPullProcessListener_Top());
        //下拉刷新的监听
        mPullToRefreshLayout.setOnRefreshProcessListener(new MyOnPullProcessListener_Bottom());
    }

    private class TestLoopAdapter_top extends LoopPagerAdapter {
        public int[] imgs = {
                R.drawable.a,
                R.drawable.b,
                R.drawable.w,
                R.drawable.d,
                R.drawable.h
        };

        public TestLoopAdapter_top(RollPagerView viewPager) {
            super(viewPager);
        }

        @Override
        public View getView(ViewGroup container, int position) {
            ImageView view = new ImageView(container.getContext());
            view.setId(position);
            view.setOnClickListener(HomePage_Fragment.this);
            view.setImageResource(imgs[position]);
            view.setScaleType(ImageView.ScaleType.CENTER_CROP);
            view.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
            return view;
        }

        @Override
        public int getRealCount() {
            return imgs.length;
        }

    }
    private class TestLoopAdapter_bottom extends LoopPagerAdapter {
        public int[] imgs = {
                R.mipmap.a1,
                R.mipmap.a2,
                R.mipmap.a3,
                R.mipmap.a4
        };

        public TestLoopAdapter_bottom(RollPagerView viewPager) {
            super(viewPager);
        }

        @Override
        public View getView(ViewGroup container, int position) {
            ImageView view = new ImageView(container.getContext());
            view.setId(position);
            view.setOnClickListener(mListenerClass);
            view.setImageResource(imgs[position]);
            view.setScaleType(ImageView.ScaleType.CENTER_CROP);
            view.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
            return view;
        }

        @Override
        public int getRealCount() {
            return imgs.length;
        }

    }
    //图片点击事件
    @Override
    public void onClick(View v) {
        switch(v.getId()){
            case 0:
                Toast.makeText(getContext(), "1", Toast.LENGTH_SHORT).show();
                break;
            case 1:
                Toast.makeText(getContext(), "2", Toast.LENGTH_SHORT).show();
                break;
            case 2:
                Toast.makeText(getContext(), "3", Toast.LENGTH_SHORT).show();
                break;
            case 3:
                Toast.makeText(getContext(), "4", Toast.LENGTH_SHORT).show();
                break;
            case 4:
                Toast.makeText(getContext(), "5", Toast.LENGTH_SHORT).show();
                break;
            //爱匹配点击
            case R.id.love_match:
                Intent love_match_intent = new Intent(m,Lovematch.class);
                startActivity(love_match_intent);
                break;
            //爱生活点击
            case R.id.love_activity:
                Intent love_activity_intent = new Intent(m,LoveActivity.class);
                startActivity(love_activity_intent);
                break;
            //故事会
            case R.id.storytelling_session:
                Intent storytelling_session_intent = new Intent(m,Storytelling_session.class);
                startActivity(storytelling_session_intent);
                break;
            //图中寻
            case R.id.search_in_figure:
                Intent search_in_figure_intent = new Intent(m,Search_in_figure.class);
                startActivity(search_in_figure_intent);
                break;
            default:break;
        }
    }
    //上拉
    public class MyOnPullProcessListener_Top implements PullToRefreshLayout.OnPullProcessListener
    {
        //一下拉第一个调用的方法调用一次
        @Override
        public void onPrepare(View v, int which)
        {
            // TODO Auto-generated method stub
        }
        //当触发了刷新操作就会被调用一次
        @Override
        public void onStart(View v, int which)
        {
            // TODO Auto-generated method stub
        }
        //当下拉刷新已经被触发后，在放开的时候就会被调用一次
        @Override
        public void onHandling(View v, int which)
        {
            // TODO Auto-generated method stub

        }
        //刷新完成的时候调用一次
        @Override
        public void onFinish(View v, int which)
        {
            // TODO Auto-generated method stub
            Toast.makeText(getContext(), "上拉刷新完成！", Toast.LENGTH_SHORT).show();
        }
        //一直往下拉就会不断连续的调用
        @Override
        public void onPull(View v, float pullDistance, int which)
        {
            // TODO Auto-generated method stub
        }

    }
    //下拉监听
    public class MyOnPullProcessListener_Bottom implements PullToRefreshLayout.OnPullProcessListener
    {
        //一下拉第一个调用的方法调用一次
        @Override
        public void onPrepare(View v, int which)
        {
            // TODO Auto-generated method stub
        }
        //当触发了刷新操作就会被调用一次
        @Override
        public void onStart(View v, int which)
        {
            // TODO Auto-generated method stub
        }
        //当下拉刷新已经被触发后，在放开的时候就会被调用一次
        @Override
        public void onHandling(View v, int which)
        {
            // TODO Auto-generated method stub

        }
        //刷新完成的时候调用一次
        @Override
        public void onFinish(View v, int which)
        {
            // TODO Auto-generated method stub
            Toast.makeText(getContext(), "下拉刷新完成！", Toast.LENGTH_SHORT).show();
        }
        //一直往下拉就会不断连续的调用
        @Override
        public void onPull(View v, float pullDistance, int which)
        {
            // TODO Auto-generated method stub
        }

    }
    class MyPullListener implements PullToRefreshLayout.OnPullListener {

        @Override
        public void onRefresh(final PullToRefreshLayout pullToRefreshLayout) {
            Log.i("ok","下拉手已松开！");
            // 下拉刷新操作
            new Handler() {
                @Override
                public void handleMessage(Message msg) {
                    // 千万别忘了告诉控件刷新完毕了哦！
                    pullToRefreshLayout.refreshFinish(PullToRefreshLayout.SUCCEED);
                }
            }.sendEmptyMessageDelayed(0, 1500);
        }

        @Override
        public void onLoadMore(final PullToRefreshLayout pullToRefreshLayout) {
            Log.i("ok","上拉手已松开！");
            // 加载操作
            new Handler() {
                @Override
                public void handleMessage(Message msg) {
                    // 千万别忘了告诉控件加载完毕了哦！
                    pullToRefreshLayout.loadmoreFinish(PullToRefreshLayout.SUCCEED);
                }
            }.sendEmptyMessageDelayed(0, 1500);
        }

    }
    //中部轮播图的点击类
class ClickListenerClass implements View.OnClickListener {

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case 0:
                Toast.makeText(getContext(), "中部轮播图1", Toast.LENGTH_SHORT).show();
                break;
            case 1:
                Toast.makeText(getContext(), "中部轮播图2", Toast.LENGTH_SHORT).show();
                break;
            case 2:
                Toast.makeText(getContext(), "中部轮播图3", Toast.LENGTH_SHORT).show();
                break;
            case 3:
                Toast.makeText(getContext(), "中部轮播图4", Toast.LENGTH_SHORT).show();
                break;
            case 4:
                Toast.makeText(getContext(), "中部轮播图5", Toast.LENGTH_SHORT).show();
                break;
            case 5:
                Toast.makeText(getContext(), "中部轮播图6", Toast.LENGTH_SHORT).show();
                break;
            default:break;
        }
    }
}
}
