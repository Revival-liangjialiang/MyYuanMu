package com.example.yuanmu.lunbo.user;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.example.yuanmu.lunbo.R;
import com.example.yuanmu.lunbo.Util.RongUtil.GetToken;
import com.google.gson.Gson;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import cn.bmob.v3.Bmob;
import cn.bmob.v3.exception.BmobException;
import cn.bmob.v3.listener.SaveListener;


/**
 * Created by yuanmu on 2016/8/31.
 */
public class RegisterEndActivity extends Activity implements View.OnClickListener{
    static final int REGISTER_SUCCESS = 0,REGISTER_FAIL = 1;
    EditText mUserNameET,mPassWordET_1,mPassWordET_2;
    String mUserNameStr;
    String mTelephoneStr;
    //完成
    TextView mComplete;
    File mFile;
    String mToken;
    Handler handler = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case REGISTER_SUCCESS:
                    Toast.makeText(RegisterEndActivity.this, "注册成功!", Toast.LENGTH_SHORT).show();
                    UserData data = new UserData();
                    data.setToken(mToken);
                    data.setUsername(mUserNameET.getText().toString());
                    data.setPassword(mPassWordET_1.getText().toString());
                    data.setPhoneNumber(mTelephoneStr);
                    data.save(new SaveListener() {
                        @Override
                        public void done(Object o, BmobException e) {
                            if(e == null){
                                Toast.makeText(RegisterEndActivity.this, "保存成功!", Toast.LENGTH_SHORT).show();
                            }
                        }

                        @Override
                        public void done(Object o, Object o2) {

                        }
                    });
                    break;
                case REGISTER_FAIL:
                    Toast.makeText(RegisterEndActivity.this, "注册失败!", Toast.LENGTH_SHORT).show();
                    break;
            }
        }
    };
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_registerend);
        Intent intent = getIntent();
        mTelephoneStr = intent.getStringExtra("Telephone");
        initBmob();
        initView();
    }

    private void initBmob() {
        Bmob.initialize(this, "d6aba0f132596eb927dcde680f807bec");
    }

    private void initView() {
        mUserNameET = (EditText)findViewById(R.id.et_nickname) ;
        mPassWordET_1 = (EditText) findViewById(R.id.et_password);
        mPassWordET_2 = (EditText) findViewById(R.id.et_confirm);
        mComplete = (TextView)findViewById(R.id.tv_enter);
        mComplete.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
       switch (v.getId()) {
           //完成事件
           case R.id.tv_enter:
               if (mPassWordET_1.getText().toString().equals(mPassWordET_2.getText().toString())) {
                   Bitmap bitmap_1 = BitmapFactory.decodeResource(getResources(), R.mipmap.myviewtest);
                   try {
                       mFile = saveFile(bitmap_1, Environment.getExternalStorageDirectory().getPath(), "ok.png");
                   } catch (IOException e) {
                       e.printStackTrace();
                   }
                   new Thread(new Runnable() {
                       @Override
                       public void run() {
                           mToken = GetToken.GetRongCloudToken(mTelephoneStr, mUserNameET.getText().toString(), mFile.toString());
                           Gson gson = new Gson();
                           ResponseData data = gson.fromJson(mToken, ResponseData.class);
                           if (data.getCode().equals("200")) {
                               Message message = new Message();
                               message.what = REGISTER_SUCCESS;
                               handler.sendMessage(message);
                           } else {
                               Message message_1 = new Message();
                               message_1.what = REGISTER_FAIL;
                               handler.sendMessage(message_1);
                           }
                       }
                   }).start();
                   break;
               }else{
                   Toast.makeText(RegisterEndActivity.this, "两次密码输入不一致!", Toast.LENGTH_SHORT).show();
               }
                   default:
                       break;

               }

    }
    public static File saveFile(Bitmap bm, String path, String fileName) throws IOException {
        File dirFile = new File(path);
        if(!dirFile.exists()){
            dirFile.mkdir();
        }
        File myCaptureFile = new File(path , fileName);
        if(myCaptureFile.exists()){
            myCaptureFile.delete();
            myCaptureFile.createNewFile();
        }
        BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(myCaptureFile));
        bm.compress(Bitmap.CompressFormat.PNG, 80, bos);
        bos.flush();
        bos.close();
        return myCaptureFile;
    }
}
